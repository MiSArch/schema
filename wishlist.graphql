schema @link(url: "https://specs.apollo.dev/federation/v2.5", import: ["@shareable", "@key", "@inaccessible", "FieldSet"]) {
  query: Query
  mutation: Mutation
}

directive @link(url: String, as: String, for: link__Purpose, import: [link__Import]) repeatable on SCHEMA

directive @key(fields: FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE

directive @shareable repeatable on OBJECT | FIELD_DEFINITION

enum link__Purpose {
  """
  `SECURITY` features provide metadata necessary to securely resolve fields.
  """
  SECURITY
  """
  `EXECUTION` features provide metadata necessary for operation execution.
  """
  EXECUTION
}

scalar link__Import

"""
Describes the fields that a foreign types can be ordered by.

Only the Id valid at the moment.
"""
enum CommonOrderField {
  """Orders by "id"."""
  ID
}

"""Specifies the order of foreign types."""
input CommonOrderInput {
  """Order direction of wishlists."""
  direction: OrderDirection
  """Field that wishlists should be ordered by."""
  field: CommonOrderField
}

input CreateWishlistInput {
  """UUID of user owning the wishlist."""
  userId: UUID!
  """UUIDs of product variants in wishlist."""
  productVariantIds: [UUID!]!
  """Wishlist name."""
  name: String!
}

scalar DateTime

type Mutation {
  """
  Adds a wishlist with a user_id, a list of product_variant_ids and a name.
  
  Formats UUIDs as hyphenated lowercase Strings.
  """
  createWishlist(
    """CreateWishlistInput"""
    input: CreateWishlistInput!
  ): Wishlist!
  """
  Updates name and/or product_variant_ids of a specific wishlist referenced with an id.
  
  Formats UUIDs as hyphenated lowercase Strings.
  """
  updateWishlist(
    """UpdateWishlistInput"""
    input: UpdateWishlistInput!
  ): Wishlist!
  """Deletes wishlist of id."""
  deleteWishlist(
    """UUID of wishlist to delete."""
    id: UUID!
  ): Boolean!
}

"""GraphQL order direction."""
enum OrderDirection {
  """Ascending order direction."""
  ASC
  """Descending order direction."""
  DESC
}

"""Foreign type of a product variant."""
type ProductVariant @key(fields: "id", resolvable: false) {
  """UUID of the product variant."""
  id: UUID!
}

"""A connection of ProductVariants."""
type ProductVariantConnection @shareable {
  """The resulting entities."""
  nodes: [ProductVariant!]!
  """Whether this connection has a next page."""
  hasNextPage: Boolean!
  """The total amount of items in this connection."""
  totalCount: Int!
}

type Query {
  """Retrieves wishlist of specific id."""
  wishlist(
    """UUID of wishlist to retrieve."""
    id: UUID!
  ): Wishlist!
  _entities(representations: [_Any!]!): [_Entity]!
}

scalar UUID

input UpdateWishlistInput {
  """UUID of wishlist to update."""
  id: UUID!
  """product variant UUIDs of wishlist to update"""
  productVariantIds: [UUID!]
  """Wishlist name to update"""
  name: String
}

"""Type of a user owning wishlists."""
type User @key(fields: "id") {
  """UUID of the user."""
  id: UUID!
  """Retrieves wishlists of user."""
  wishlists(
    """Describes that the `first` N wishlists should be retrieved."""
    first: Int
    """Describes how many wishlists should be skipped at the beginning."""
    skip: Int
    """Specifies the order in which wishlists are retrieved."""
    orderBy: WishlistOrderInput
  ): WishlistConnection!
}

"""The Wishlist of a user."""
type Wishlist @key(fields: "id") {
  """Wishlist UUID."""
  id: UUID!
  """User."""
  user: User!
  """Name of Wishlist."""
  name: String!
  """Timestamp when Wishlist was created."""
  createdAt: DateTime!
  """Timestamp when Wishlist was last updated."""
  lastUpdatedAt: DateTime!
  """Retrieves product variants."""
  productVariants(
    """Describes that the `first` N product variants should be retrieved."""
    first: Int
    """
    Describes how many product variants should be skipped at the beginning.
    """
    skip: Int
    """Specifies the order in which product variants are retrieved."""
    orderBy: CommonOrderInput
  ): ProductVariantConnection!
}

"""A connection of Wishlists."""
type WishlistConnection @shareable {
  """The resulting entities."""
  nodes: [Wishlist!]!
  """Whether this connection has a next page."""
  hasNextPage: Boolean!
  """The total amount of items in this connection."""
  totalCount: Int!
}

"""Describes the fields that a wishlist can be ordered by."""
enum WishlistOrderField {
  """Orders by "id"."""
  ID
  """Orders by "user_id"."""
  USER_ID
  """Orders by "name"."""
  NAME
  """Orders by "created_at"."""
  CREATED_AT
  """Orders by "last_updated_at"."""
  LAST_UPDATED_AT
}

"""Specifies the order of wishlists."""
input WishlistOrderInput {
  """Order direction of wishlists."""
  direction: OrderDirection
  """Field that wishlists should be ordered by."""
  field: WishlistOrderField
}

scalar _Any

scalar FieldSet

union _Entity = ProductVariant | User | Wishlist